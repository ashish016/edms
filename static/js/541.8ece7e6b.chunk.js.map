{"version":3,"file":"static/js/541.8ece7e6b.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Analysis = React.lazy(()=>import('./views/analysis/Analysis'))\nconst DataTable = React.lazy(()=>import('./views/table/DataTable'))\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/analysis', name: 'Analysis', element: Analysis, exact: true },\n  { path: '/datatable', name: 'Analysis', element: DataTable, exact: true }\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; 2023 EDMS.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          EDMS\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar8 from './../../assets/images/avatars/8.jpg'\n\nconst AppHeaderDropdown = () => {\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Lock Account\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CHeaderText,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          {/* <CIcon icon={logo} height={48} alt=\"Logo\" /> */}\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n    \n  },\n  {\n    component: CNavTitle,\n    name: 'Analytics',\n  },\n  {\n    component: CNavItem,\n    name: 'Analysis',\n    to: '/analysis',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Docs',\n  //   href: 'https://coreui.io/react/docs/templates/installation/',\n  //   icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  // },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <h1>EDMS</h1>\n        {/* <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["path","exact","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","concat","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","_jsxs","CBreadcrumb","className","children","_jsx","CBreadcrumbItem","href","map","breadcrumb","_createElement","_objectSpread","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","Navigate","to","replace","AppFooter","CFooter","target","rel","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar8","size","CDropdownMenu","CDropdownHeader","CDropdownItem","CIcon","icon","cilBell","CBadge","cilEnvelopeOpen","cilTask","cilCommentSquare","cilUser","cilSettings","cilCreditCard","cilFile","CDropdownDivider","cilLockLocked","dispatch","useDispatch","sidebarShow","useSelector","state","CHeader","position","fluid","CHeaderToggler","onClick","type","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","cilList","AppHeaderDropdown","CHeaderDivider","AppSidebarNav","_ref","items","navLink","badge","_Fragment","text","navItem","item","rest","_objectWithoutProperties","_excluded","Component","navGroup","_item$items","_excluded2","String","toggler","visible","startsWith","cilStar","customClassName","CNavTitle","cilSpeedometer","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","CSidebarNav","SimpleBar","navigation","CSidebarToggler","AppHeader"],"sourceRoot":""}